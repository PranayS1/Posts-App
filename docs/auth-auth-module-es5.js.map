{"version":3,"sources":["src/app/auth/login/login.component.html","src/app/auth/signup/signup.component.html","src/app/auth/auth-routing.module.ts","src/app/auth/auth.module.ts","src/app/auth/login/login.component.css","src/app/auth/login/login.component.ts","src/app/auth/signup/signup.component.css","src/app/auth/signup/signup.component.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<mat-card>\\r\\n    <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n    <form (submit)=\\\"onLogin(loginForm)\\\" #loginForm=\\\"ngForm\\\" *ngIf=\\\"!isLoading\\\">\\r\\n        <mat-form-field>\\r\\n            <input matInput name=\\\"email\\\" ngModel type=\\\"email\\\" placeholder=\\\"E-mail\\\" \\r\\n                #emailInput=\\\"ngModel\\\" required email>\\r\\n            <mat-error *ngIf=\\\"emailInput.invalid\\\">Please enter valid email</mat-error>\\r\\n        </mat-form-field>\\r\\n        <br>\\r\\n        <mat-form-field>\\r\\n            <input type=\\\"password\\\" matInput name=\\\"password\\\" ngModel  placeholder=\\\"Password\\\" \\r\\n                #passwordInput=\\\"ngModel\\\" required>\\r\\n            <mat-error *ngIf=\\\"passwordInput.invalid\\\">Please enter the valid password</mat-error>\\r\\n        </mat-form-field>\\r\\n        <br>\\r\\n        <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" *ngIf=\\\"!isLoading\\\">Login</button>\\r\\n    </form>\\r\\n</mat-card>\\r\\n\\r\\n\"","export default \"<mat-card>\\r\\n    <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n    <form (submit)=\\\"onsignup(signupForm)\\\" #signupForm=\\\"ngForm\\\" *ngIf=\\\"!isLoading\\\">\\r\\n        <mat-form-field>\\r\\n            <input matInput name=\\\"email\\\" ngModel type=\\\"email\\\" placeholder=\\\"E-mail\\\" \\r\\n                #emailInput=\\\"ngModel\\\" required email>\\r\\n            <mat-error *ngIf=\\\"emailInput.invalid\\\">Please enter valid email</mat-error>\\r\\n        </mat-form-field>\\r\\n        <br>\\r\\n        <mat-form-field>\\r\\n            <input type=\\\"password\\\" matInput name=\\\"password\\\" ngModel  placeholder=\\\"Password\\\" \\r\\n                #passwordInput=\\\"ngModel\\\" required>\\r\\n            <mat-error *ngIf=\\\"passwordInput.invalid\\\">Please enter the valid password</mat-error>\\r\\n        </mat-form-field>\\r\\n        <br>\\r\\n        <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" *ngIf=\\\"!isLoading\\\">Sign up</button>\\r\\n    </form>\\r\\n</mat-card>\\r\\n\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent},\r\n  { path: 'signup', component: SignupComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {FormsModule } from '@angular/forms'\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { AngularMaterialModule } from '../angular-material.module';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    SignupComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    AngularMaterialModule,\r\n    AuthRoutingModule\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n","export default \"mat-form-field,\\r\\ntextarea {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\nmat-spinner {\\r\\n    margin: auto;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztJQUVJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLFlBQVk7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9hdXRoL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCxcclxudGV4dGFyZWEge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbm1hdC1zcGlubmVyIHtcclxuICAgIG1hcmdpbjogYXV0bztcclxufSJdfQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n\r\n  constructor(public authService: AuthService) { }\r\n\r\n  isLoading: boolean=false;\r\n  private authStatusSub: Subscription;\r\n\r\n  ngOnInit() {\r\n    this.authStatusSub = this.authService.getAuthStatusListener()\r\n      .subscribe(authStatus => {\r\n        this.isLoading = false;\r\n      })\r\n  }\r\n\r\n  onLogin(form: NgForm) {\r\n    if (form.invalid) {\r\n      return;\r\n    }\r\n    this.authService.login(form.value.email, form.value.password);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"mat-form-field,\\r\\ntextarea {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\nmat-spinner {\\r\\n    margin: auto;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0lBRUksV0FBVztBQUNmOztBQUVBO0lBQ0ksWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQsXHJcbnRleHRhcmVhIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG5tYXQtc3Bpbm5lciB7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbn0iXX0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AuthService } from '../auth.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit, OnDestroy {\r\n\r\n  isLoading:boolean = false;\r\n  private authStatusSub: Subscription;\r\n\r\n  constructor(public authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.authStatusSub = this.authService.getAuthStatusListener()\r\n      .subscribe(authStatus => {\r\n        this.isLoading = false;\r\n      })\r\n  }\r\n\r\n  onsignup(form: NgForm){\r\n    if(form.invalid) {\r\n      return;\r\n    }\r\n    this.authService.createUser(form.value.email, form.value.password);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///","file":"auth-auth-module-es5.js"}