{"version":3,"sources":["./src/app/auth/login/login.component.html","./src/app/auth/signup/signup.component.html","./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.css","./src/app/auth/login/login.component.ts","./src/app/auth/signup/signup.component.css","./src/app/auth/signup/signup.component.ts"],"names":[],"mappings":"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","file":"auth-auth-module-es2015.js","sourcesContent":["export default \"<mat-card>\\r\\n    <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n    <form (submit)=\\\"onLogin(loginForm)\\\" #loginForm=\\\"ngForm\\\" *ngIf=\\\"!isLoading\\\">\\r\\n        <mat-form-field>\\r\\n            <input matInput name=\\\"email\\\" ngModel type=\\\"email\\\" placeholder=\\\"E-mail\\\" \\r\\n                #emailInput=\\\"ngModel\\\" required email>\\r\\n            <mat-error *ngIf=\\\"emailInput.invalid\\\">Please enter valid email</mat-error>\\r\\n        </mat-form-field>\\r\\n        <br>\\r\\n        <mat-form-field>\\r\\n            <input type=\\\"password\\\" matInput name=\\\"password\\\" ngModel  placeholder=\\\"Password\\\" \\r\\n                #passwordInput=\\\"ngModel\\\" required>\\r\\n            <mat-error *ngIf=\\\"passwordInput.invalid\\\">Please enter the valid password</mat-error>\\r\\n        </mat-form-field>\\r\\n        <br>\\r\\n        <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" *ngIf=\\\"!isLoading\\\">Login</button>\\r\\n    </form>\\r\\n</mat-card>\\r\\n\\r\\n\"","export default \"<mat-card>\\r\\n    <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n    <form (submit)=\\\"onsignup(signupForm)\\\" #signupForm=\\\"ngForm\\\" *ngIf=\\\"!isLoading\\\">\\r\\n        <mat-form-field>\\r\\n            <input matInput name=\\\"email\\\" ngModel type=\\\"email\\\" placeholder=\\\"E-mail\\\" \\r\\n                #emailInput=\\\"ngModel\\\" required email>\\r\\n            <mat-error *ngIf=\\\"emailInput.invalid\\\">Please enter valid email</mat-error>\\r\\n        </mat-form-field>\\r\\n        <br>\\r\\n        <mat-form-field>\\r\\n            <input type=\\\"password\\\" matInput name=\\\"password\\\" ngModel  placeholder=\\\"Password\\\" \\r\\n                #passwordInput=\\\"ngModel\\\" required>\\r\\n            <mat-error *ngIf=\\\"passwordInput.invalid\\\">Please enter the valid password</mat-error>\\r\\n        </mat-form-field>\\r\\n        <br>\\r\\n        <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" *ngIf=\\\"!isLoading\\\">Sign up</button>\\r\\n    </form>\\r\\n</mat-card>\\r\\n\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent},\r\n  { path: 'signup', component: SignupComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {FormsModule } from '@angular/forms'\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { AngularMaterialModule } from '../angular-material.module';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    SignupComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    AngularMaterialModule,\r\n    AuthRoutingModule\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n","export default \"mat-form-field,\\r\\ntextarea {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\nmat-spinner {\\r\\n    margin: auto;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztJQUVJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLFlBQVk7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9hdXRoL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCxcclxudGV4dGFyZWEge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbm1hdC1zcGlubmVyIHtcclxuICAgIG1hcmdpbjogYXV0bztcclxufSJdfQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n\r\n  constructor(public authService: AuthService) { }\r\n\r\n  isLoading: boolean=false;\r\n  private authStatusSub: Subscription;\r\n\r\n  ngOnInit() {\r\n    this.authStatusSub = this.authService.getAuthStatusListener()\r\n      .subscribe(authStatus => {\r\n        this.isLoading = false;\r\n      })\r\n  }\r\n\r\n  onLogin(form: NgForm) {\r\n    if (form.invalid) {\r\n      return;\r\n    }\r\n    this.authService.login(form.value.email, form.value.password);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"mat-form-field,\\r\\ntextarea {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\nmat-spinner {\\r\\n    margin: auto;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0lBRUksV0FBVztBQUNmOztBQUVBO0lBQ0ksWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQsXHJcbnRleHRhcmVhIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG5tYXQtc3Bpbm5lciB7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbn0iXX0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AuthService } from '../auth.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit, OnDestroy {\r\n\r\n  isLoading:boolean = false;\r\n  private authStatusSub: Subscription;\r\n\r\n  constructor(public authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.authStatusSub = this.authService.getAuthStatusListener()\r\n      .subscribe(authStatus => {\r\n        this.isLoading = false;\r\n      })\r\n  }\r\n\r\n  onsignup(form: NgForm){\r\n    if(form.invalid) {\r\n      return;\r\n    }\r\n    this.authService.createUser(form.value.email, form.value.password);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}